# CMake OMPL module
#
# It defines the following variables:
# OMPL_FOUND         - TRUE
# OMPL_INCLUDE_DIRS  - The OMPL include directories
# OMPL_LIBRARY_DIRS  - The OMPL library directories
# OMPL_LIBRARIES     - The OMPL libraries
# OMPLAPP_LIBRARIES  - The OMPL.app libraries (if installed)
# OMPL_VERSION       - The OMPL version in the form <major>.<minor>.<patchlevel>
# OMPL_MAJOR_VERSION - Major version
# OMPL_MINOR_VERSION - Minor version
# OMPL_PATCH_VERSION - Patch version

@PACKAGE_INIT@

set(OMPL_VERSION @PROJECT_VERSION@)
set(OMPL_MAJOR_VERSION @PROJECT_VERSION_MAJOR@)
set(OMPL_MINOR_VERSION @PROJECT_VERSION_MINOR@)
set(OMPL_PATCH_VERSION @PROJECT_VERSION_PATCH@)

set_and_check(OMPL_INCLUDE_DIR "@PACKAGE_INCLUDE_INSTALL_DIR@")
set_and_check(OMPL_LIBRARY_DIR @PACKAGE_LIB_INSTALL_DIR@)
find_library(OMPL_LIBRARIES NAMES ompl.${OMPL_VERSION} ompl
    PATHS ${OMPL_LIBRARY_DIR} NO_DEFAULT_PATH)
find_library(OMPLAPPBASE_LIBRARY NAMES ompl_app_base.${OMPL_VERSION} ompl_app_base
    PATHS ${OMPL_LIBRARY_DIR} NO_DEFAULT_PATH)
find_library(OMPLAPP_LIBRARY NAMES ompl_app.${OMPL_VERSION} ompl_app
    PATHS ${OMPL_LIBRARY_DIR} NO_DEFAULT_PATH)
if (OMPLAPPBASE_LIBRARY AND OMPLAPP_LIBRARY)
    set(OMPLAPP_LIBRARIES "${OMPLAPPBASE_LIBRARY};${OMPLAPP_LIBRARY}"
        CACHE STRING "Paths to OMPL.app libraries")
endif()

set(OMPL_INCLUDE_DIRS "${OMPL_INCLUDE_DIRS}")

list(APPEND OMPL_INCLUDE_DIRS "@EIGEN3_INCLUDE_DIR@;@FCL_INCLUDE_DIRS@;@ASSIMP_INCLUDE_DIRS@")

list(APPEND OMPL_INCLUDE_DIRS "@Boost_INCLUDE_DIR@")
list(APPEND OMPL_LIBRARY_DIRS "@Boost_LIBRARY_DIRS@")
list(APPEND OMPL_LIBRARIES "@Boost_SERIALIZATION_LIBRARY@")
list(APPEND OMPL_LIBRARIES "@Boost_FILESYSTEM_LIBRARY@")
list(APPEND OMPL_LIBRARIES "@Boost_SYSTEM_LIBRARY@")
list(APPEND OMPL_LIBRARIES "@Boost_PROGRAM_OPTIONS_LIBRARY@")

list(APPEND OMPL_LIBRARIES "@CMAKE_THREAD_LIBS_INIT@")

if( @OMPL_EXTENSION_ODE@ )
  list(APPEND OMPL_INCLUDE_DIRS "@ODE_INCLUDE_DIRS@")
  list(APPEND OMPL_LIBRARY_DIRS "@ODE_LIBRARY_DIRS@")
  list(APPEND OMPL_LIBRARIES "@ODE_LIBRARIES@")
endif()

if( @OMPL_EXTENSION_TRIANGLE@ )
  list(APPEND OMPL_INCLUDE_DIRS "@TRIANGLE_INCLUDE_DIRS@")
  list(APPEND OMPL_LIBRARY_DIRS "@TRIANGLE_LIBRARY_DIRS@")
  list(APPEND OMPL_LIBRARIES "@TRIANGLE_LIBRARIES@")
endif()

if( @FLANN_FOUND@ )
  list(APPEND OMPL_INCLUDE_DIRS "@FLANN_INCLUDE_DIRS@")
  list(APPEND OMPL_LIBRARY_DIRS "@FLANN_LIBRARY_DIRS@")
  list(APPEND OMPL_LIBRARIES "@FLANN_LIBRARIES@")
endif()

if( @spot_FOUND@ )
  list(APPEND OMPL_INCLUDE_DIRS "@SPOT_INCLUDE_DIRS@")
  list(APPEND OMPL_LIBRARY_DIRS "@SPOT_LIBRARY_DIRS@")
  list(APPEND OMPL_LIBRARIES "@SPOT_LIBRARIES@")
endif()

list(REMOVE_DUPLICATES OMPL_INCLUDE_DIRS)
list(REMOVE_DUPLICATES OMPL_LIBRARY_DIRS)
list(REMOVE_DUPLICATES OMPL_LIBRARIES)

list(REMOVE_ITEM OMPL_INCLUDE_DIRS "")
list(REMOVE_ITEM OMPL_LIBRARY_DIRS "")
list(REMOVE_ITEM OMPL_LIBRARIES "")

set(OMPL_INCLUDE_DIRS "${OMPL_INCLUDE_DIRS}" CACHE STRING "Include path for OMPL and its dependencies")
set(OMPL_LIBRARY_DIRS "${OMPL_LIBRARY_DIRS}" CACHE STRING "Library directories for OMPL and its dependencies")
set(OMPL_LIBRARIES "${OMPL_LIBRARIES}" CACHE STRING "OMPL Libraries and its dependencies")

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(ompl DEFAULT_MSG OMPL_INCLUDE_DIRS OMPL_LIBRARY_DIRS OMPL_LIBRARIES)
